/// <reference types="node" />
import { Ora } from 'ora';
import EventEmitter from 'events';
import { ChalkInstance } from 'chalk';
import { EnumValues } from '@nosana/sdk/dist/types/utils.js';
import { ProviderEvents } from '../../Provider.js';
type ProviderEventsValues = EnumValues<typeof ProviderEvents>;
export default class Logger extends EventEmitter {
    spinner: Ora;
    private defaultSubscriptions;
    constructor();
    private setDefaultListeners;
    standard_info_log(event: {
        log: string;
        type: string;
        pending: boolean;
    }, spinner?: Ora): void;
    standard_container_log(event: {
        log: string;
        type: string;
    }): void;
    override(event: ProviderEventsValues, callback: (...args: any[]) => void): void;
    log(message: string | ChalkInstance, pending?: boolean): void;
    succeed(message?: string | ChalkInstance): void;
    fail(message?: string | ChalkInstance): void;
}
export {};
