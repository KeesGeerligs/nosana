import { OutputFormatter } from '../OutputFormatter.js';
import { OUTPUT_EVENTS } from '../outputEvents.js';
class MockOutputFormatterAdapter {
    constructor() {
        this.finalize = jest.fn();
        this.output = jest.fn();
    }
}
describe('OutputFormatter', () => {
    let formatter;
    let mockAdapter;
    beforeEach(() => {
        mockAdapter = new MockOutputFormatterAdapter();
        formatter = new OutputFormatter(mockAdapter);
    });
    it('should call the appropriate event handler', () => {
        const param = {
            job_url: 'http://example.com',
        };
        formatter.output(OUTPUT_EVENTS.OUTPUT_JOB_URL, param);
        expect(mockAdapter.output).toHaveBeenCalledWith(OUTPUT_EVENTS.OUTPUT_JOB_URL, param);
    });
    it('should call the appropriate event handler for throw and throw error', () => {
        const param = {
            error: new Error('ARTIFACT NOT SUPPORT'),
        };
        formatter.throw(OUTPUT_EVENTS.OUTPUT_ARTIFACT_SUPPORT_INCOMING_ERROR, param);
        expect(mockAdapter.output).toHaveBeenCalledWith(OUTPUT_EVENTS.OUTPUT_ARTIFACT_SUPPORT_INCOMING_ERROR, param);
    });
    it('should call finalize on the adapter', () => {
        formatter.finalize();
        expect(mockAdapter.finalize).toHaveBeenCalled();
    });
});
