import { LowSync } from 'lowdb';
import { CronJob } from 'cron';
import { JobDefinition, Provider, OpState, Flow, FlowState, Operation, OperationResults, OperationType } from './Provider.js';
import { NodeDb } from './modules/db/index.js';
import Logger from './modules/logger/index.js';
type OpFunction = (op: Operation<any>, flowId: string, updateOpState: (newOpStateData: Partial<FlowState>) => void, operationResults: OperationResults | undefined) => Promise<OpState>;
export declare class BasicProvider implements Provider {
    protected db: LowSync<NodeDb>;
    name: string;
    logger: Logger;
    protected supportedOps: {
        [key: string]: OpFunction;
    };
    clearFlowsCronJob: CronJob;
    constructor(configLocation: string, logger?: Logger);
    /**
     * Main run
     * @param jobDefinition
     * @param flowStateId
     * @returns
     */
    run(jobDefinition: JobDefinition, flowId?: string): Flow;
    continueFlow(flowId: string): Promise<Flow>;
    protected hookPreRun(flow: Flow): Flow;
    /**
     * Run operations form job definition
     * @param jobDefinition
     * @param flowStateId
     */
    protected runFlow(flowId: string): Promise<void>;
    /**
     * Check if BasicProvider is healthy. Providers should implement this themselve
     * @returns boolean
     */
    healthy(throwError?: Boolean): Promise<Boolean>;
    updateMarketRequiredResources(_: string): Promise<void>;
    stopFlowOperation(flowId: string, op: Operation<OperationType>): Promise<OpState>;
    /**
     * Wait for flow to be finished and return FlowState
     * @param id Flow id
     * @param logCallback
     * @returns FlowState
     */
    waitForFlowFinish(flowId: string, logCallback?: Function): Promise<FlowState | null>;
    /**
     * Finish a flow. Set status & emit end event
     * @param flowStateId
     */
    finishFlow(flowId: string, status?: string): void;
    clearFlow(flowId: string): Promise<void>;
    stopFlow(flowId: string): Promise<void>;
    clearOldFlows(): Promise<void>;
    /****************
     *   Getters   *
     ****************/
    getFlow(id: string): Flow | undefined;
}
export {};
