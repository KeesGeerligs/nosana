/**
 * Method to pause the process
 * @param seconds Number of seconds to pause
 */
declare const sleep: (seconds: number) => Promise<void>;
/**
 * Method to easily get a universal timestamp
 */
declare const now: () => number;
declare function askYesNoQuestion(question: string, onYes: () => Promise<void>, onNo: () => void): Promise<void>;
declare const clearLine: () => void;
declare const colors: {
    RED: string;
    GREEN: string;
    YELLOW: string;
    BLUE: string;
    CYAN: string;
    WHITE: string;
    RESET: string;
};
/**
 * Method to test and cast strings into string arrays
 * @param {string | string[]} value The string or string array being tested and casted
 * @returns { string[] } Returns a string array
 */
declare const ifStringCastToArray: (value: string | string[]) => string[];
declare function logTable(data: any): void;
declare function isNodeOnboarded(status: string): boolean;
declare const SECONDS_PER_DAY: number;
export { logTable, now, sleep, clearLine, askYesNoQuestion, colors, ifStringCastToArray, SECONDS_PER_DAY, isNodeOnboarded, };
