import { PublicKey } from '@solana/web3.js';
import { getSDK } from '../../../../../sdk.js';
import { configs } from '../../../../configs/configs.js';
export async function verifyBackendSignatureMiddleware(req, res, next) {
    const sdk = getSDK();
    try {
        if (!sdk.authorization.validateHeader(req.headers, {
            expiry: 300,
            key: 'x-session-id',
            publicKey: new PublicKey(configs().backendAuthorizationAddress),
        })) {
            return res.status(401).send('Unathorized Request');
        }
        res.locals['session_id'] = req.headers['x-session-id'].split(':')[0];
        next();
    }
    catch (error) {
        res.status(401).send(`Unathorized Request: ${error.message}`);
    }
}
