import { ContainerOrchestrationInterface } from '../../provider/containerOrchestration/interface.js';
import { Resource } from '../../provider/types.js';
import { NodeRepository } from '../../repository/NodeRepository.js';
import { ImageManager } from './image/imageManager.js';
import { VolumeManager } from './volume/volumeManager.js';
export declare class ResourceManager {
    private containerOrchestration;
    private repository;
    private required_market;
    images: ImageManager;
    volumes: VolumeManager;
    constructor(containerOrchestration: ContainerOrchestrationInterface, repository: NodeRepository);
    resyncResourcesDB(): Promise<void>;
    fetchMarketRequiredResources(market: string): Promise<void>;
    prune(): Promise<void>;
    getResourceVolumes(resources: Resource[]): Promise<{
        dest: string;
        name: string;
        readonly?: boolean;
    }[]>;
}
