import { Client as SDK, Market } from '@nosana/sdk';
import { PublicKey } from '@solana/web3.js';
export declare class MarketHandler {
    private sdk;
    private market;
    private address;
    private checkQueuedInterval?;
    private inMarket;
    constructor(sdk: SDK);
    clear(): void;
    isInMarket(): boolean;
    setInMarket(): void;
    check(market: string): Promise<Market>;
    stopMarket(): Promise<boolean>;
    getJobMarket(market: string): Promise<Market>;
    getMarket(): Market | undefined;
    setMarket(market: string): Promise<Market>;
    checkQueuedInMarket(): Promise<Market | undefined>;
    join(accessKey?: PublicKey): Promise<Market>;
    refresh(): Promise<Market>;
    leave(): Promise<void>;
    processMarketQueuePosition(market: Market, isFirst: boolean): {
        position: number;
        count: number;
    };
    startMarketQueueMonitoring(updateCallback: (market: Market | undefined) => void): Promise<void>;
    stopMarketQueueMonitoring(): void;
    stop(): Promise<void>;
}
