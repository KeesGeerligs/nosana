/// <reference types="node" />
/// <reference types="node" />
import EventEmitter from 'events';
import { Client as SDK, Run, Job } from '@nosana/sdk';
export declare class ExpiryHandler {
    private sdk;
    private jobAddress;
    expiryEndTime: number;
    expiryTimer: NodeJS.Timeout | null;
    warningTimer: NodeJS.Timeout | null;
    private onExpireCallback;
    private extendSubscriptionId?;
    private resolving;
    constructor(sdk: SDK);
    stopExtendMonitoring(): void;
    init<T>(run: Run, job: Job, jobstring: string, accountEmitter: EventEmitter, onExpireCallback: () => Promise<T>): number;
    start(): void;
    stop(): void;
    private startOrResetTimer;
    extendExpiryTime(additionalTimeMs: number): void;
    expired(run: Run, job: Job): boolean;
    waitUntilExpired(): Promise<void>;
    private shortenedExpiry;
}
