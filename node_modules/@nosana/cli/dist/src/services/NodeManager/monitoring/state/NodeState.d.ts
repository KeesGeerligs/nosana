import { LogEntry } from '../proxy/loggingProxy.js';
export interface StateObserver {
    update(status: string, state: {
        [key: string]: string;
    }, timestamp: number): void;
}
export declare const state: (node: string) => NodeState;
export declare class NodeState {
    private shared;
    private info;
    private status;
    private state;
    private history;
    private observers;
    constructor(node: string);
    clear(): void;
    getNodeInfo(): {
        state: import("./classifyState.js").StateCategory;
    };
    addObserver(observer: StateObserver): void;
    removeObserver(observer: StateObserver): void;
    private notifyObservers;
    addState(status: string, state: {
        [key: string]: string;
    }): void;
    process(data: LogEntry): void;
}
