import dotenv from 'dotenv';
import { dirname, resolve } from 'path';
import { fileURLToPath } from 'url';
export class NodeConfigs {
    constructor(options) {
        this.options = options;
    }
    loadVariablesToEnv() {
        const network = this.options.network ? this.options.network : 'mainnet';
        const env = network === 'mainnet' ? 'production' : 'dev';
        const modulePath = dirname(fileURLToPath(import.meta.url));
        dotenv.config({
            path: resolve(modulePath, `../../../../.env.${env}`),
            override: true,
        });
    }
}
export class NodeConfigsSingleton {
    constructor() { }
    static getInstance(options) {
        if (!NodeConfigsSingleton.instance) {
            NodeConfigsSingleton.instance = new NodeConfigs(options || {});
            NodeConfigsSingleton.instance.loadVariablesToEnv();
        }
        return NodeConfigsSingleton.instance;
    }
}
NodeConfigsSingleton.instance = null;
