import { IncomingHttpHeaders } from 'http';
import { PublicKey } from '@solana/web3.js';
import { Wallet } from '../types/index.js';
type AuthorizationOptions = {
    expiry: number;
    includeTime: boolean;
    key: string;
};
type ValidateOptions = {
    expiry: number;
    publicKey: PublicKey;
    seperator: string;
};
type GenerateOptions = {
    includeTime: boolean;
    seperator: string;
};
export declare class AuthorizationManager {
    private wallet;
    constructor(wallet: Wallet);
    generate(message: string, options?: Partial<GenerateOptions>): string;
    validate(validationString: string, options?: Partial<ValidateOptions>): boolean;
    generateHeader(message: string, options?: Partial<Omit<AuthorizationOptions, 'expiresInMinutes'>>): Headers;
    validateHeader(headers: IncomingHttpHeaders, options?: Partial<Pick<AuthorizationOptions, 'key'>> & Partial<ValidateOptions>): boolean;
}
export {};
