import { AxiosInstance, AxiosResponse } from 'axios';
import { PublicKey } from '@solana/web3.js';
import { Wallet as AnchorWallet } from '@coral-xyz/anchor/dist/cjs/provider.js';
import type { SecretsConfig, Wallet } from '../types/index.js';
/**
 * Class to interact with Nosana Secret Manager
 * https://docs.nosana.io/secrets/start.html
 */
export declare class SecretManager {
    api: AxiosInstance;
    config: SecretsConfig;
    wallet: AnchorWallet;
    constructor(environment: string | undefined, wallet: Wallet, config?: Partial<SecretsConfig>);
    setToken(token: string): void;
    /**
     * Function to create a secret in the Nosana Secret manager
     */
    login(job?: string): Promise<void>;
    /**
     * Function to create a secret in the Nosana Secret manager
     * @param secret Object with secret data store
     */
    create(secret: object): Promise<AxiosResponse>;
    /**
     * Function to get results for a given job
     * @param job public key of the job to get secrets from
     */
    get(job: PublicKey | string): Promise<AxiosResponse>;
    /**
     * Function to delete a secret in the Nosana Secret manager
     * @param key The key of secret that has to be removed, a string.
     */
    delete(key: string): Promise<AxiosResponse>;
}
