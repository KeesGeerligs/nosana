import { AxiosRequestConfig } from 'axios';
import type { IPFSConfig } from '../types/config.js';
/**
 * Class to interact with Pinata Cloud
 * https://www.pinata.cloud/
 */
export declare class IPFS {
    private api;
    config: IPFSConfig;
    constructor(environment?: string, config?: Partial<IPFSConfig>);
    /**
     * Convert the ipfs bytes from a solana job to a CID
     * It prepends the 0x1220 (18,32) to make it 34 bytes and Base58 encodes it.
     * This result is IPFS addressable.
     */
    static solHashToIpfsHash(hashArray: Array<number>): string;
    /**
     * Converts IPFS hash to byte array needed to submit results
     * @param hash IPFS hash
     * @returns Array<number>
     */
    IpfsHashToByteArray(hash: string): Array<number>;
    retrieve(hash: string | Array<number>, options?: AxiosRequestConfig): Promise<any>;
    /**
     * Function to pin data into Pinata Cloud
     * @param data Object to pin into IPFS as JSON
     */
    pin(data: object): Promise<string>;
    /**
     * Function to pin data into Pinata Cloud
     * @param data Object to pin into IPFS as JSON
     */
    pinFile(filePath: string): Promise<string>;
}
