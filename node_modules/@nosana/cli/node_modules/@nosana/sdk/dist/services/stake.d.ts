import { SolanaManager } from './solana.js';
import * as anchor from '@coral-xyz/anchor';
import { PublicKey } from '@solana/web3.js';
export declare class Stake extends SolanaManager {
    /**
     * Function to fetch stake accounts from chain
     */
    all(): Promise<any>;
    /**
     * Function to fetch a stake account from chain
     * @param address
     */
    get(address: PublicKey | string): Promise<any>;
    /**
     * Create a stake account
     * @param address NOS Token account
     * @param amount amount
     * @param unstakeDays unstake period
     * @returns
     */
    create(address: PublicKey, amount: number, unstakeDays: number): Promise<string | undefined>;
    /**
     * Separate method to create reward account
     * @returns tx hash
     */
    createRewardAccount(): Promise<string | undefined>;
    /**
     * Topup stake
     * @param stakeAmount
     * @returns
     */
    topup(stakeAmount: number): Promise<string | undefined>;
    /**
     * Extend existing stake
     * @param stakeDurationSeconds
     * @returns
     */
    extend(stakeDurationSeconds: number): Promise<string | undefined>;
    /**
     * Unstake
     * @returns
     */
    unstake(): Promise<string | undefined>;
    /**
     * Restake
     * @returns
     */
    restake(): Promise<string | undefined>;
    /**
     * Close stake
     * @returns
     */
    close(): Promise<(string | undefined)[]>;
    /**
     * Withdraw
     * @returns
     */
    withdraw(): Promise<string | undefined>;
    /**
     * Claim staking rewards
     * @returns tx hash
     */
    claimRewards(): Promise<any>;
    /**
     * Claim stake and Restake
     * @param amount amount to restake
     * @returns tx hash
     */
    claimAndRestakeRewards(amount: number): Promise<any>;
    /**
     * Get staking pool info
     * @returns Object
     */
    getPoolInfo(): Promise<any>;
    /**
     * Get rewards info
     * @returns Object
     */
    getRewardsInfo(): Promise<{
        global: any;
        account: any;
        vault: [anchor.web3.PublicKey, number] | undefined;
    } | null>;
    /**
     * Get NOS balance of stake vault
     * @returns
     */
    getStakeVaultBalance(): Promise<number | null | undefined>;
}
