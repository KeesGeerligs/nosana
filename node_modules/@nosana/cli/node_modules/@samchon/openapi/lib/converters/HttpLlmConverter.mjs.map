{"version":3,"file":"HttpLlmConverter.mjs","sources":["../../src/converters/HttpLlmConverter.ts"],"sourcesContent":["import { OpenApi } from \"../OpenApi\";\nimport { IHttpLlmApplication } from \"../structures/IHttpLlmApplication\";\nimport { IHttpLlmFunction } from \"../structures/IHttpLlmFunction\";\nimport { IHttpMigrateApplication } from \"../structures/IHttpMigrateApplication\";\nimport { IHttpMigrateRoute } from \"../structures/IHttpMigrateRoute\";\nimport { ILlmSchema } from \"../structures/ILlmSchema\";\nimport { LlmSchemaSeparator } from \"../utils/LlmSchemaSeparator\";\nimport { LlmTypeChecker } from \"../utils/LlmTypeChecker\";\nimport { OpenApiTypeChecker } from \"../utils/OpenApiTypeChecker\";\nimport { OpenApiV3Downgrader } from \"./OpenApiV3Downgrader\";\n\nexport namespace HttpLlmConverter {\n  export const compose = (\n    migrate: IHttpMigrateApplication,\n    options: IHttpLlmApplication.IOptions,\n  ): IHttpLlmApplication => {\n    // COMPOSE FUNCTIONS\n    const errors: IHttpLlmApplication.IError[] = migrate.errors.map((e) => ({\n      method: e.method,\n      path: e.path,\n      messages: e.messages,\n      operation: () => e.operation(),\n      route: () => undefined,\n    }));\n    const functions: IHttpLlmFunction[] = migrate.routes\n      .map((route) => {\n        if (route.method === \"head\") return null;\n        const func: IHttpLlmFunction | null = composeFunction(options)(\n          migrate.document().components,\n        )(route);\n        if (func === null)\n          errors.push({\n            method: route.method,\n            path: route.path,\n            messages: [\"Failed to escape $ref\"],\n            operation: () => route.operation(),\n            route: () => route,\n          });\n        return func;\n      })\n      .filter((v): v is IHttpLlmFunction => v !== null);\n    return {\n      openapi: \"3.0.3\",\n      functions,\n      errors,\n      options,\n    };\n  };\n\n  export const schema = (props: {\n    components: OpenApi.IComponents;\n    schema: OpenApi.IJsonSchema;\n  }): ILlmSchema | null => {\n    const resolved: OpenApi.IJsonSchema | null = escape({\n      components: props.components,\n      visited: new Set(),\n      input: props.schema,\n    });\n    if (resolved === null) return null;\n    const downgraded: ILlmSchema = OpenApiV3Downgrader.downgradeSchema({\n      original: {},\n      downgraded: {},\n    })(resolved) as ILlmSchema;\n    LlmTypeChecker.visit(downgraded, (schema) => {\n      if (\n        LlmTypeChecker.isOneOf(schema) &&\n        (schema as any).discriminator !== undefined\n      )\n        delete (schema as any).discriminator;\n    });\n    return downgraded;\n  };\n}\n\nconst composeFunction =\n  (options: IHttpLlmApplication.IOptions) =>\n  (components: OpenApi.IComponents) =>\n  (route: IHttpMigrateRoute): IHttpLlmFunction | null => {\n    // CAST SCHEMA TYPES\n    const cast = (s: OpenApi.IJsonSchema) =>\n      HttpLlmConverter.schema({\n        components,\n        schema: s,\n      });\n    const output: ILlmSchema | null | undefined =\n      route.success && route.success ? cast(route.success.schema) : undefined;\n    if (output === null) return null;\n    const properties: [string, ILlmSchema | null][] = [\n      ...route.parameters.map((p) => ({\n        key: p.key,\n        schema: {\n          ...p.schema,\n          title: p.parameter().title ?? p.schema.title,\n          description: p.parameter().description ?? p.schema.description,\n        },\n      })),\n      ...(route.query\n        ? [\n            {\n              key: route.query.key,\n              schema: {\n                ...route.query.schema,\n                title: route.query.title() ?? route.query.schema.title,\n                description:\n                  route.query.description() ?? route.query.schema.description,\n              },\n            },\n          ]\n        : []),\n      ...(route.body\n        ? [\n            {\n              key: route.body.key,\n              schema: {\n                ...route.body.schema,\n                description:\n                  route.body.description() ?? route.body.schema.description,\n              },\n            },\n          ]\n        : []),\n    ].map((o) => [o.key, cast(o.schema)]);\n    if (properties.some(([_k, v]) => v === null)) return null;\n\n    // COMPOSE PARAMETERS\n    const parameters: ILlmSchema[] = options.keyword\n      ? [\n          {\n            type: \"object\",\n            properties: Object.fromEntries(\n              properties as [string, ILlmSchema][],\n            ),\n          },\n        ]\n      : properties.map(([_k, v]) => v!);\n    const operation: OpenApi.IOperation = route.operation();\n\n    // FINALIZATION\n    return {\n      method: route.method as \"get\",\n      path: route.path,\n      name: route.accessor.join(\"_\"),\n      strict: true,\n      parameters,\n      separated: options.separate\n        ? LlmSchemaSeparator.parameters({\n            parameters,\n            predicator: options.separate,\n          })\n        : undefined,\n      output: output\n        ? (OpenApiV3Downgrader.downgradeSchema({\n            original: {},\n            downgraded: {},\n          })(output as any) as ILlmSchema)\n        : undefined,\n      description: (() => {\n        if (operation.summary && operation.description) {\n          return operation.description.startsWith(operation.summary)\n            ? operation.description\n            : [\n                operation.summary,\n                operation.summary.endsWith(\".\") ? \"\" : \".\",\n                \"\\n\\n\",\n                operation.description,\n              ].join(\"\");\n        }\n        return operation.description ?? operation.summary;\n      })(),\n      deprecated: operation.deprecated,\n      tags: operation.tags,\n      route: () => route,\n      operation: () => operation,\n    };\n  };\n\nconst escape = (props: {\n  components: OpenApi.IComponents;\n  visited: Set<string>;\n  input: OpenApi.IJsonSchema;\n}): OpenApi.IJsonSchema | null => {\n  if (OpenApiTypeChecker.isReference(props.input)) {\n    // REFERENCE\n    const name: string = props.input.$ref.split(\"#/components/schemas/\")[1];\n    const target: OpenApi.IJsonSchema | undefined =\n      props.components.schemas?.[name];\n    if (!target) return null;\n    else if (props.visited.has(name)) return null;\n    return escape({\n      components: props.components,\n      visited: new Set([...props.visited, name]),\n      input: target,\n    });\n  } else if (OpenApiTypeChecker.isOneOf(props.input)) {\n    // ONE-OF\n    const oneOf: Array<OpenApi.IJsonSchema | null> = props.input.oneOf.map(\n      (schema) =>\n        escape({\n          ...props,\n          input: schema,\n        })!,\n    );\n    if (oneOf.some((v) => v === null)) return null;\n    return {\n      ...props.input,\n      oneOf: flat(oneOf as OpenApi.IJsonSchema[]),\n    };\n  } else if (OpenApiTypeChecker.isObject(props.input)) {\n    // OBJECT\n    const properties: Array<[string, OpenApi.IJsonSchema | null]> | undefined =\n      props.input.properties\n        ? Object.entries(props.input.properties).map(\n            ([key, value]) =>\n              [\n                key,\n                escape({\n                  ...props,\n                  input: value,\n                }),\n              ] as const,\n          )\n        : undefined;\n    const additionalProperties:\n      | OpenApi.IJsonSchema\n      | null\n      | boolean\n      | undefined = props.input.additionalProperties\n      ? typeof props.input.additionalProperties === \"object\" &&\n        props.input.additionalProperties !== null\n        ? escape({\n            ...props,\n            input: props.input.additionalProperties,\n          })\n        : props.input.additionalProperties\n      : undefined;\n    if (properties && properties.some(([_k, v]) => v === null)) return null;\n    else if (additionalProperties === null) return null;\n    return {\n      ...props.input,\n      properties: properties\n        ? Object.fromEntries(\n            properties.filter(([_k, v]) => !!v) as Array<\n              [string, OpenApi.IJsonSchema]\n            >,\n          )\n        : undefined,\n      additionalProperties,\n    };\n  } else if (OpenApiTypeChecker.isTuple(props.input)) {\n    // TUPLE\n    const prefixItems: Array<OpenApi.IJsonSchema | null> =\n      props.input.prefixItems.map((schema) =>\n        escape({\n          ...props,\n          input: schema,\n        }),\n      );\n    const additionalItems: OpenApi.IJsonSchema | null | boolean | undefined =\n      typeof props.input.additionalItems === \"object\" &&\n      props.input.additionalItems !== null\n        ? escape({\n            ...props,\n            input: props.input.additionalItems,\n          })\n        : props.input.additionalItems;\n    if (prefixItems.some((v) => v === null)) return null;\n    else if (additionalItems === null) return null;\n    return {\n      ...props.input,\n      prefixItems: prefixItems as OpenApi.IJsonSchema[],\n      additionalItems,\n    };\n  } else if (OpenApiTypeChecker.isArray(props.input)) {\n    // ARRAY\n    const items: OpenApi.IJsonSchema | null = escape({\n      ...props,\n      input: props.input.items,\n    });\n    if (items === null) return null;\n    return {\n      ...props.input,\n      items,\n    };\n  }\n  return props.input;\n};\n\nconst flat = (elements: OpenApi.IJsonSchema[]): OpenApi.IJsonSchema[] =>\n  elements\n    .map((elem) => (OpenApiTypeChecker.isOneOf(elem) ? flat(elem.oneOf) : elem))\n    .flat();\n"],"names":["HttpLlmConverter","compose","migrate","options","errors","map","e","method","path","messages","operation","route","undefined","functions","routes","func","composeFunction","document","components","push","filter","v","openapi","schema","props","resolved","escape","visited","Set","input","downgraded","OpenApiV3Downgrader","downgradeSchema","original","LlmTypeChecker","visit","isOneOf","discriminator","cast","s","output","success","properties","parameters","p","key","title","parameter","description","query","body","o","some","_k","keyword","type","Object","fromEntries","name","accessor","join","strict","separated","separate","LlmSchemaSeparator","predicator","summary","startsWith","endsWith","deprecated","tags","OpenApiTypeChecker","isReference","$ref","split","target","schemas","has","oneOf","flat","isObject","entries","value","additionalProperties","isTuple","prefixItems","additionalItems","isArray","items","elements","elem"],"mappings":"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"}