import { HttpMigration } from "./HttpMigration.mjs";

import { HttpLlmConverter } from "./converters/HttpLlmConverter.mjs";

import { HttpLlmFunctionFetcher } from "./http/HttpLlmFunctionFetcher.mjs";

import { LlmDataMerger } from "./utils/LlmDataMerger.mjs";

var HttpLlm;

(function(HttpLlm) {
    HttpLlm.application = (document, options) => {
        if (document["x-samchon-emended"] === true) document = HttpMigration.application(document);
        return HttpLlmConverter.compose(document, {
            keyword: options?.keyword ?? false,
            separate: options?.separate ?? null
        });
    };
    HttpLlm.schema = props => HttpLlmConverter.schema(props);
    HttpLlm.execute = props => HttpLlmFunctionFetcher.execute(props);
    HttpLlm.propagate = props => HttpLlmFunctionFetcher.propagate(props);
    HttpLlm.mergeParameters = props => LlmDataMerger.parameters(props);
    HttpLlm.mergeValue = (x, y) => LlmDataMerger.value(x, y);
})(HttpLlm || (HttpLlm = {}));

export { HttpLlm };
//# sourceMappingURL=HttpLlm.mjs.map
