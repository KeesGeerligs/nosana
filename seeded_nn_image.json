{
  "version": "0.1",
  "type": "container",
  "meta": {
    "trigger": "benchmark"
  },
  "ops": [
    {
      "type": "container/run",
      "id": "bench-SD-forge",
      "args": {
        "cmd": [
          "/bin/bash",
          "-c",
          "echo \"Running GPU check...\"; if bench --check-specs --check-gpu; then echo \"GPU check passed. Proceeding with benchmarks...\"; echo \"nvidia-smi output:\"; nvidia-smi; echo \"Running NN benchmark 1...\"; bench --benchmark nn --num-samples 1000 || echo \"NN benchmark 1 failed, continuing with NN benchmark 2\"; echo \"Running NN benchmark 2...\"; bench --benchmark nn --num-samples 1000 || echo \"NN benchmark 2 failed, continuing with Forge benchmark\"; sleep 10; bench --check-specs; echo \"Starting benchmarking service...\"; python /opt/stable-diffusion-webui-forge/launch.py --nowebui --api  --pytorch-deterministic --disable-xformers --always-gpu --all-in-fp16 --attention-pytorch > /dev/null & sleep 30; echo \"Running Forge benchmark...\"; bench --benchmark image --url http://localhost:7861  --job-length 10 --model v1-5-pruned-emaonly --image-framework forge --batch-size-list 1 10 20 30 50 --TTFI-info; else echo \"GPU check failed. Printing nvidia-smi output:\"; nvidia-smi; fi"
        ],
        "image": "docker.io/nosana/seeded_nn_image:0.2.5",
        "gpu": true,
        "env": {
          "CUBLAS_WORKSPACE_CONFIG": ":4096:8",
          "CUDA_VISIBLE_DEVICES": "0"
        },
        "resources": [
          {
            "type": "S3",
            "url": "https://models.nosana.io/stable-diffusion/1.5",
            "target": "/opt/stable-diffusion-webui-forge/models/Stable-diffusion"
          }
        ]
      },
      "results": {
        "results_batchsize_1": "(?<=Batch Size 1: ).*",
        "results_batchsize_10": "(?<=Batch Size 10: ).*",
        "results_batchsize_20": "(?<=Batch Size 20: ).*",
        "results_batchsize_30": "(?<=Batch Size 30: ).*",
        "results_batchsize_50": "(?<=Batch Size 50: ).*",
        "seed_prediction_results_v2": "(?<=TTFI-info benchmark: ).*",
        "system_specs": "(?<=system specs: ).*",
        "nn_benchmark_results_1": "(?<=NN benchmark results with 1000 samples: ).*",
        "nn_benchmark_results_2": "(?<=NN benchmark results with 5000 samples: ).*"
      }
    }
  ]
}